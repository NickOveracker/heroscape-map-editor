/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { BoardHex, HexTerrain } from '../../types'
import { hexTerrainColor } from '../maphex/hexColors'
import usePieceHoverState from '../../hooks/usePieceHoverState'
import useBoundStore from '../../store/store'
import { ThreeEvent } from '@react-three/fiber'


export function Ladder({
  boardHex
}: {
  boardHex: BoardHex
}) {
  const { nodes } = useGLTF('/handmade-ladder.glb') as any
  const {
    isHovered,
    onPointerEnterPID,
    onPointerOut,
  } = usePieceHoverState()
  const toggleSelectedPieceID = useBoundStore(s => s.toggleSelectedPieceID)
  const onPointerUp = (event: ThreeEvent<PointerEvent>) => {
    event.stopPropagation() // prevent pass through
    // Early out right clicks(event.button=2), middle mouse clicks(1)
    if (event.button !== 0) {
      return
    }
    toggleSelectedPieceID(isSelected ? '' : boardHex.pieceID)
  }
  const selectedPieceID = useBoundStore(s => s.selectedPieceID)
  const yellowColor = 'yellow'
  const isSelected = selectedPieceID === boardHex.pieceID
  const isHighlighted = isHovered || isSelected
  const color = isHighlighted ? yellowColor : hexTerrainColor[HexTerrain.ladder]
  return (
    <mesh
      geometry={nodes.Ladder.geometry}
      onPointerUp={onPointerUp}
      onPointerOut={e => onPointerOut(e)}
      onPointerEnter={e => onPointerEnterPID(e, boardHex.pieceID)}
    >
      <meshMatcapMaterial color={color} />
    </mesh>
  )
}

useGLTF.preload('/handmade-battlement.glb')
