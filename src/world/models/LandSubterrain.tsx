/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { HexTerrain, Pieces } from '../../types'
import { hexTerrainColor } from '../maphex/hexColors'
import { decodePieceID } from '../../utils/map-utils'
import { piecesSoFar } from '../../data/pieces'

export default function LandSubterrain({ pid }: { pid: string }) {
  const {
    pieceID,
    // altitude,
    // rotation,
    // boardHexID,
    // pieceCoords
  } = decodePieceID(pid)
  const pieceTerrain = piecesSoFar[pieceID].terrain
  const isDirtSubterrain =
    pieceTerrain === HexTerrain.grass ||
    pieceTerrain === HexTerrain.sand ||
    pieceTerrain === HexTerrain.rock
  const subTerrainColor = isDirtSubterrain
    ? hexTerrainColor[HexTerrain.dirt]
    : hexTerrainColor[pieceTerrain]
  const regex = /\d+/g;

  let pieceSize = pieceID.match(regex)?.[0] ?? '';
  if (pieceSize === '7' && pieceID === Pieces.wallWalk7) {
    pieceSize = '7B'
  }

  switch (pieceSize) {
    case '1':
      return (
        <Subterrain1 subTerrainColor={subTerrainColor} />
      )
    case '2':
      return (
        <Subterrain2 subTerrainColor={subTerrainColor} />
      )
    case '3':
      return (
        <Subterrain3 subTerrainColor={subTerrainColor} />
      )
    case '4':
      return (
        <Subterrain4 subTerrainColor={subTerrainColor} />
      )
    case '5':
      return (
        <Subterrain5 subTerrainColor={subTerrainColor} />
      )
    case '6':
      return (
        <Subterrain6 subTerrainColor={subTerrainColor} />
      )
    case '7B':
      return (
        <Subterrain7B subTerrainColor={subTerrainColor} />
      )
    case '7':
      return (
        <Subterrain7 subTerrainColor={subTerrainColor} />
      )
    case '9':
      return (
        <Subterrain9 subTerrainColor={subTerrainColor} />
      )
    case '24':
      return (
        <Subterrain24 subTerrainColor={subTerrainColor} />
      )
    default:
      return null
  }
}

export function Subterrain24({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_24.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_24.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_24.glb')

export function Subterrain9({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_9.glb') as any
  return (
    <mesh
      geometry={nodes['Subterrain-9'].geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_9.glb')

export function Subterrain7B({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_7B.glb') as any
  return (
    <mesh
      geometry={nodes['Subterrain-7B'].geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_7B.glb')

export function Subterrain7({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_7.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_7.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_7.glb')


export function Subterrain6({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_6.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_6.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_6.glb')

export function Subterrain5({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_5.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_5.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_5.glb')

export function Subterrain4({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_4.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_4.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_4.glb')

export function Subterrain3({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_3.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_3.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_3.glb')

export function Subterrain2({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_2.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_2.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_2.glb')

export function Subterrain1({ subTerrainColor }: { subTerrainColor: string }) {
  const { nodes } = useGLTF('/subterrain_1.glb') as any
  return (
    <mesh
      geometry={nodes.Subterrain_1.geometry}
    >
      <meshMatcapMaterial color={subTerrainColor} />
    </mesh>
  )
}
useGLTF.preload('/subterrain_1.glb')